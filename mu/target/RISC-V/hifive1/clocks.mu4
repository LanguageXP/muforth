( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)

loading HiFive1 clock generation experiments

( FE310-G000/002 datasheet contains some pointers about the contents of the
  OTP memory, but it's confusing. It shows offsets in *decimal*, but, used
  directly, they point to nothing.

  It turns out those decimal offsets are *word indexes*, not byte indexes.)

#2041 2 << @otp-rom +  equ device-stamp  ( not guaranteed unique)
#2043 2 << @otp-rom +  equ hfrosc-trim

__meta

: +bits  ( bits a)   ( turn on bits in a word in memory)
   tuck               @ or  swap ! ;

: -bits  ( bits a)   ( turn off bits in a word in memory)
   swap  invert  over @ and  swap ! ;

( mtime is a 64-bit counter, clocked by the LFCLK - which, in the case of
  the HiFiv1, is driven by a 32768 Hz external oscillator.

  mtime @  gives us the low 32 bits, which is all we need.)

: ticks  ( n)  mtime @  + begin  mtime @  over - 0< 0= until  drop ;

( If we run the chip for 32768 lfclk cycles - exactly one second - we can
  measure the speed by reading the mcycle counter. It will tell us how many
  cycles we executed in a second.)

: speed
   mcycle32@  32768 ticks  mcycle32@  swap - ;

( Let's trim the HFROSC, fire it up, and then switch to it.)
: >hfrosc
   hfrosc-trim @ 16 <<  "4000_0000 +  ( enable, /1)  hfrosccfg !
   begin  hfrosccfg @  0< until  ( until ready bit)
   "1_0000 ( pllsel) pllcfg -bits  ( hfrosc drives hfclk) ;

( Now let's fire up the PLL, and switch to it. Let's start with 160MHz.)
: >pll
   >hfrosc  ( switch to internal osc while fiddling with PLL)
   "100 plloutdiv !  ( /1)
   (         Q/2  F/40    R/2 )
   %0010_0000_01_100111_0_001 pllcfg !  33 ticks ( about 1ms)
   begin  pllcfg @  0< until  ( wait until PLL lock)
   "1_0000 ( pllsel) pllcfg +bits  ( PLL drives hfclk) ;
