( This file is part of muforth: http://muforth.nimblemachines.com/

  Copyright 2002-2018 David Frech. (Read the LICENSE for details.)

ld lib/solarized.mu4

loading Truecolor (24-bit) color support for terminals

( I just learned that, in addition to the lookup-table-based 8, 16, and 256
  color versions, there is also a way to specify, for every character
  shown, a 24-bit color and background color!

  Let's try it out...

  The foreground escape sequence is ESC[38;2;<r>;<g>;<b>m
  The background escape sequence is ESC[48;2;<r>;<g>;<b>m
  <r> <g> <b> range from 0 to 255 inclusive.
  The escape sequence ESC[0m returns output to default.
)

( Use "pictured numerics" to create the string at pad.)

: "m   char m hold ;
: ";   char ; hold ;
: ;#   ( component)  #s drop  "; ;
: (rgb)  ( rgb which)  radix preserve decimal  push  >rgb
   <#  "m  ;# ;# ;#  2 ;#  pop #s  " [" "hold  #> ;

: (fg)  ( rgb - a u)  38 (rgb) ;
: (bg)  ( rgb - a u)  48 (rgb) ;

: fg  (fg) type ;
: bg  (bg) type ;

: fg0  ( reset to normal)  ." [0m" ;

( 255,100,0 => hex ff6400)
: test  "ff6400 fg  ." TRUECOLOR"  fg0 ; 

( For fun, let's "prettyprint" - with color - a C routine from muforth's
  implementation. This is from muforth/src/interpret.c.)

: hi  ( hilight)  ( color)  constant  does>  ( a u)  @ fg type ;
base0  hi xnorm  ( normal text)
yellow hi xtype
base01 hi xcomment
green  hi xres   ( reserved word)
red    hi xspec  ( special)
blue   hi xnum

: solar  cr
" /*
 * Scan for trailing delimiter and consume it, unless we run out of
 * input text first.
 */
" xcomment
" static void " xtype  " scan("  xnorm  " int "  xtype  " delim)
{
" xnorm
"     char " xtype  " *last;
" xnorm
"     char " xtype  " c;

" xnorm
"     /* capture lineno that token begins on */
" xcomment
"     parsed_lineno = lineno;

" xnorm
"     for " xres  " (last = _(first); last < _(end); last++)
    {
        c = *last;
" xnorm
"         if " xres  " (c == " xnorm  " '\n'" xspec  " ) lineno++;
" xnorm
"         if " xres  " (delim == c
            || (delim == ' ' && isspace(c)))
        {
" xnorm
"             /* found trailing delimiter; consume it */
" xcomment
"
            capture_token(last, " xnorm  " 1" xnum  " );
" xnorm
"             return" xres  " ;
        }
    }

" xnorm
"     /* ran out of text; don't consume trailing */
" xcomment
"     capture_token(last, " xnorm  " 0" xnum  " );
}
" xnorm ; 

